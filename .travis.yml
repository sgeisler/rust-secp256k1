language: rust
cache:
  directories:
  - wasm

rust:
  - stable
  - beta
  - nightly
  - 1.22.0
distro: bionic
os:
 - linux
 - windows

addons:
  chrome: stable
  apt:
    packages:
      - clang-9
      - nodejs

matrix:
  exclude:
  - rust: 1.22.0
    os: windows

script:
  - if [ "$TRAVIS_RUST_VERSION" == "1.22.0" ]; then 
    cargo generate-lockfile --verbose && cargo update -p cc --precise "1.0.41" --verbose;
    fi
  - cargo build --verbose --no-default-features
  - cargo build --verbose --no-default-features --features="bitcoin_hashes"
  - cargo build --verbose --no-default-features --features="serde"
  - cargo build --verbose --no-default-features --features="lowmemory"
  - cargo build --verbose --no-default-features --features="rand"
  - cargo build --verbose --no-default-features --features="rand serde recovery endomorphism"
  - cargo build --verbose --no-default-features --features="fuzztarget recovery"
  - cargo build --verbose --features=rand
  - cargo test --no-run --features=fuzztarget
  - cargo test --verbose --features="bitcoin_hashes"
  - cargo test --verbose --features=rand
  - cargo test --verbose --features="rand rand-std"
  - cargo test --verbose --features="rand serde"
  - cargo test --verbose --features="rand serde recovery endomorphism"
  - cargo build --verbose
  - cargo test --verbose
  - cargo build --verbose --release
  - cargo test --verbose --release
  - cargo run --example sign_verify
  - cargo run --example sign_verify_recovery --features=recovery
  - cargo run --example generate_keys --features=rand
  - if [ ${TRAVIS_RUST_VERSION} == "stable" ]; then cargo doc --verbose --features="rand,serde,recovery,endomorphism"; fi
  - if [ ${TRAVIS_RUST_VERSION} == "nightly" ]; then cargo test --verbose --benches --features=unstable; fi
  - if [ ${TRAVIS_RUST_VERSION} == "nightly" -a "$TRAVIS_OS_NAME" = "linux" ]; then
    cd no_std_test &&
    cargo run --release | grep -q "Verified Successfully";
    fi
  - if [ ${TRAVIS_RUST_VERSION} == "stable" -a "$TRAVIS_OS_NAME" = "linux" ]; then
    clang --version &&
    CARGO_TARGET_DIR=wasm cargo install --verbose --force wasm-pack &&
    sed -i 's/\[lib\]/[lib]\ncrate-type = ["cdylib", "rlib"]/' Cargo.toml &&
    CC=clang-9 wasm-pack build &&
    CC=clang-9 wasm-pack test --node;
    fi
